{
  "extensionName": "KodingKreators",
  "description": "Koding Kreators mBlock 3 plugin",
  "version": "1.8.2",
  "author": "Koding Kreators",
  "homepage": "https://kodingkreators.com",
  "sort": 0,
  "javascriptURL": "js/kodingkreators.js",
  "firmware": "1.0",
  "extensionPort": 0,
  "blockSpecs": [
    [
      "R",
      "read analog %d.analogSensorIDs",
      "getAnalogSensor",
      "AnalogSensor1",
      {
        "encode": "{d0}",
        "inc": "",
        "def": "",
        "setup": "pinMode(A{0}, INPUT);\n",
        "work": "analogRead(A{0})",
        "loop": ""
      }
    ],
    [
      "B",
      "read digital %d.digitalSensorIDs",
      "getDigitalSensor",
      "DigitalSensor1",
      {
        "encode": "{d0}",
        "inc": "",
        "def": "",
        "setup": "pinMode({0}, INPUT);\n",
        "work": "digitalRead({0})",
        "loop": ""
      }
    ],
    [
      "R",
      "read potentiometer (knob)",
      "getPotentiometer",
      {
        "inc": "",
        "def": "",
        "setup": "pinMode(A4, INPUT);\n",
        "work": "analogRead(A4)",
        "loop": ""
      }
    ],
    [
      "B",
      "read green button state",
      "getGreenButtonState",
      {
        "inc": "",
        "def": "",
        "setup": "pinMode(8, INPUT);\n",
        "work": "digitalRead(8)",
        "loop": ""
      }
    ],
    [
      "w",
      "set digital %d.digitalSensorIDs as %d.levels",
      "setDigitalSensor",
      "DigitalSensor1",
      "HIGH",
      {
        "encode": "{d0}{d1}",
        "inc": "",
        "def": "",
        "setup": "pinMode({0}, OUTPUT);\n",
        "work": "digitalWrite({0}, {1});\n",
        "loop": ""
      }
    ],
    [
      "R",
      "read ultrasonic sensor distance (cm)",
      "getUltrasonicSensor",
      {
        "inc": "",
        "def":
          "--separator--float getUltrasonicSensorDistance(int trig,int echo){\npinMode(trig,OUTPUT);\ndigitalWrite(trig,LOW);\ndelayMicroseconds(2);\ndigitalWrite(trig,HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trig,LOW);\npinMode(echo, INPUT);\nreturn pulseIn(echo,HIGH,30000)/58.0;\n}\n",
        "setup": "",
        "work": "getUltrasonicSensorDistance(7, 6)",
        "loop": ""
      }
    ],
    [
      "w",
      "set servo motor %d.servoMotorIDs as angle %d.servoMotorValues",
      "setServoMotor",
      "ServoMotor1",
      90,
      {
        "encode": "{d0}{d1}",
        "inc": "#include <Servo.h>\n",
        "def": "Servo servo_{0};\n",
        "setup": "servo_{0}.attach({0});\n",
        "work": "servo_{0}.write({1});\n",
        "loop": ""
      }
    ],
    [
      "w",
      "set LED strip %d.ledIDs RED%d.rgbValues GREEN%d.rgbValues BLUE%d.rgbValues",
      "setLEDStrip",
      "LED1",
      0,
      0,
      0,
      {
        "encode": "{d0}{d1}{d2}{d3}",
        "inc": "#include \"WS2812.h\"\n\n",
        "def":
          "\n#ifndef KK_LED_H_WS2018_DEFINITION\n#define KK_LED_H_WS2018_DEFINITION\nWS2812 LED(4);\ncRGB defaultColorValue = {0, 0, 0};\ncRGB colorValue;\n#endif // KK_LED_H_WS2018_DEFINITION\n",
        "setup":
          "#ifndef KK_LED_H_WS2018_SETUP\n#define KK_LED_H_WS2018_SETUP\nLED.setOutput(9);\n    for (int __i__ = 0; __i__ < 4; __i__++) {LED.set_crgb_at(__i__, defaultColorValue);}\n#endif // KK_LED_H_WS2018_SETUP\n",
        "work":
          "colorValue.r = {1};\ncolorValue.g = {2};\ncolorValue.b = {3};\nLED.set_crgb_at({0}, colorValue);\nLED.sync();\n",
        "loop": ""
      }
    ]
  ],
  "menus": {
    "analogSensorIDs": [
      "AnalogSensor1",
      "AnalogSensor2",
      "AnalogSensor3",
      "AnalogSensor4"
    ],
    "digitalSensorIDs": [
      "DigitalSensor1",
      "DigitalSensor2",
      "DigitalSensor3",
      "DigitalSensor4"
    ],
    "levels": ["HIGH", "LOW"],
    "servoMotorIDs": ["ServoMotor1", "ServoMotor2"],
    "servoMotorValues": [0, 45, 80, 90, 100, 135, 180],
    "ledIDs": ["LED1", "LED2", "LED3", "LED4"],
    "rgbValues": [0, 50, 100, 150, 200, 255]
  },
  "values": {
    "AnalogSensor1": 0,
    "AnalogSensor2": 1,
    "AnalogSensor3": 2,
    "AnalogSensor4": 3,
    "DigitalSensor1": 13,
    "DigitalSensor2": 12,
    "DigitalSensor3": 5,
    "DigitalSensor4": 4,
    "HIGH": 1,
    "LOW": 0,
    "ServoMotor1": 11,
    "ServoMotor2": 10,
    "LED1": 0,
    "LED2": 1,
    "LED3": 2,
    "LED4": 3
  },
  "translators": {}
}
